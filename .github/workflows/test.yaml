name: Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.23, 1.24]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: set up go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: check go version
        run: go version
      - name: install dependencies
        run: go mod download
      - name: build application
        run: go build -v ./...
      - name: run tests
        run: go test -v ./... -coverprofile=coverage.out
      - name: upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.go-version }}
          path: coverage.out
          retention-days: 5

  display_result:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        go-version: [1.23, 1.24]
    steps:
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report-${{ matrix.go-version }}
      - name: Display coverage report
        run: |
          value=$(cat coverage.out)
          echo "$value"

  release:
    runs-on: ubuntu-latest
    needs: display_result
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
      - name: Build application
        run: go build -v ./...
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/${{ github.repository }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
      
